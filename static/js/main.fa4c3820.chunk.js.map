{"version":3,"sources":["Quote/Quote.js","Todo/Todo.js","Todo/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","useState","quote","setQuote","useEffect","fetchQuotes","a","fetch","then","res","json","data","min","max","length","Math","floor","random","className","text","author","Todo","forwardRef","ref","todo","editTodo","deleteTodo","toggleComplete","editingText","todoEditing","setTodoEditing","setEditingText","id","type","onChange","e","target","value","complete","onClick","Todos","setTodo","todos","setTodos","updatedTodos","filter","map","temp","localStorage","getItem","storedTodos","JSON","parse","stringify","setItem","onSubmit","preventDefault","newTodo","Date","getTime","charAt","toUpperCase","slice","typeName","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAiCeA,MA7Bf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,sBAAAC,EAAA,sEACZC,MAAM,+BACbC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAACG,GAPjC,IAA+BC,EAAKC,EAQhCV,EAASQ,GARkBC,EAQS,EARJC,EAQMF,EAAKG,OAPtCC,KAAKC,MAAMJ,EAAMG,KAAKE,UAAUJ,EAAM,EAAID,UAI7B,mFAAH,qDAMjBP,MACC,IAGD,sBAAKa,UAAU,qBAAf,UACE,iFACA,gCACE,wCAAShB,EAAMiB,KAAf,OACA,6BAAKjB,EAAMkB,gB,sBCJJC,EApBFC,sBAAW,WAA0GC,GAAS,IAAhHC,EAA+G,EAA/GA,KAAMC,EAAyG,EAAzGA,SAAUC,EAA+F,EAA/FA,WAAYC,EAAmF,EAAnFA,eAAgBC,EAAmE,EAAnEA,YAAaC,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,eAC/G,OACE,sBAAKb,UAAU,YAAYK,IAAKA,EAAhC,UACGM,IAAgBL,EAAKQ,GAAM,uBAAOd,UAAU,cAAce,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAKJ,EAAeI,EAAEC,OAAOC,QAAQA,MAAOT,IAC5HJ,EAAKc,SAAY,qBAAKpB,UAAU,sBAAf,SAAuCM,EAAKL,OAAgB,qBAAKD,UAAU,YAAf,SAA6BM,EAAKL,OAEhH,sBAAKD,UAAU,iBAAf,UACE,wBAAQA,UAAU,aAAaqB,QAAS,kBAAIb,EAAWF,EAAKQ,KAA5D,SAAiE,cAAE,IAAF,MAEhER,EAAKc,SAAY,wBAAQpB,UAAU,uBAAuBqB,QAAS,kBAAIZ,EAAeH,EAAKQ,KAA1E,SAAgF,cAAC,IAAD,MAAgC,wBAAQd,UAAU,aAAaqB,QAAS,kBAAIZ,EAAeH,EAAKQ,KAAhE,SAAsE,cAAC,IAAD,MAEvMH,IAAgBL,EAAKQ,GAAM,yBAAQd,UAAU,aAAaqB,QAAS,kBAAId,EAASD,EAAKQ,KAA1D,cAAgE,cAAE,IAAF,OAAqC,yBAAQd,UAAU,aAAaqB,QAAS,WAAKT,EAAeN,EAAKQ,KAAjE,cAAwE,cAAE,IAAF,gB,QCyFlMQ,MAjGf,WAEE,MAAwBvC,mBAAS,IAAjC,mBAAOuB,EAAP,KAAaiB,EAAb,KACA,EAA0BxC,mBAAS,IAAnC,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAAsC1C,mBAAS,MAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KACA,EAAsC7B,mBAAS,IAA/C,mBAAO2B,EAAP,KAAoBG,EAApB,KA6BA,SAASL,EAAWM,GAClB,IAAMY,EAAe,YAAIF,GAAOG,QAAO,SAACrB,GAAD,OAAUA,EAAKQ,KAAOA,KAC7DW,EAASC,GAGX,SAASjB,EAAeK,GACtB,IAAMY,EAAe,YAAIF,GAAOI,KAAI,SAACtB,GAInC,OAHGA,EAAKQ,KAAMA,IACZR,EAAKc,UAAYd,EAAKc,UAEjBd,KAGTmB,EAASC,GAGX,SAASnB,EAASO,GAChB,GAA0B,IAAvBJ,EAAYd,OAAf,CACA,IAAM8B,EAAc,YAAIF,GAAOI,KAAI,SAACtB,GAKlC,OAJGA,EAAKQ,KAAOA,IACbR,EAAKL,KAAOS,GAGPJ,KAETmB,EAASC,GACTd,EAAe,MACfC,EAAe,KAIjB,OA1DA3B,qBAAU,WACR,IAAM2C,EAAOC,aAAaC,QAAQ,SAC5BC,EAAcC,KAAKC,MAAML,GAC5BG,GACDP,EAASO,KAEX,IAEF9C,qBAAU,WACR,IAAM2C,EAAOI,KAAKE,UAAUX,GAC5BM,aAAaM,QAAQ,QAAQP,KAC5B,CAACL,IAgDF,sBAAKxB,UAAU,aAAf,UAEA,oBAAIA,UAAU,QAAd,uDAEE,uBAAMA,UAAU,aAAaqC,SAlDjC,SAAsBpB,GAEpB,GADAA,EAAEqB,iBACiB,IAAhBhC,EAAKV,OAAR,CAEA,IAAM2C,EAAS,CACbzB,IAAI,IAAI0B,MAAOC,UACfxC,KAAMK,EAAKoC,OAAO,GAAGC,cAAgBrC,EAAKsC,MAAM,GAChDxB,UAAU,GAGZK,EAAS,CAACc,GAAF,mBAAcf,KACtBD,EAAQ,MAuCN,UACE,uBAAOvB,UAAU,cAAee,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAKM,EAAQN,EAAEC,OAAOC,QAAQA,MAAOb,IAC3F,wBAAQN,UAAU,aAAae,KAAK,SAApC,SAA8C,cAAC,IAAD,SAIhD,cAAC,IAAD,CAAU8B,SAAU,KAApB,SAEKrB,EAAMI,KAAI,SAAAtB,GAAI,OACb,cAAC,EAAD,CAEAA,KAAMA,EACNE,WAAYA,EACZC,eAAgBA,EAChBF,SAAUA,EACVI,YAAaA,EACbC,eAAgBA,EAChBC,eAAgBA,GAPXP,EAAKQ,aC9DPgC,MApBf,WACE,OACE,sBAAK9C,UAAU,YAAf,UAEE,cAAC,EAAD,IAEA,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aAEf,cAAC,EAAD,IAEA,qBAAKA,UAAU,SAAf,SACE,qECNO+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa4c3820.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./Quote.css\";\n\n\nfunction Quote() {\n\n  const [quote, setQuote] = useState('');\n\n  function generateRandomInteger(min, max) {\n    return Math.floor(min + Math.random()*(max + 1 - min))\n  }\n\n  useEffect(() => {\n    const fetchQuotes = async() => \n      await fetch(`https://type.fit/api/quotes`)\n    .then(res => res.json()).then((data) => {\n      setQuote(data[generateRandomInteger(0,data.length)]);\n    })\n\n    fetchQuotes();\n  }, [])\n\n  return (\n    <div className=\"insipiration__card\">\n      <h1>Do you need some motivation to start the day?  </h1>\n      <div > \n        <h2>{`\"${quote.text}\"`}</h2>\n        <h4>{quote.author}</h4>\n      </div>\n    </div>\n  )\n}\n\nexport default Quote\n","import React, {forwardRef} from 'react';\nimport * as FaIcons from 'react-icons/fa';\n\nconst Todo = forwardRef(({ todo, editTodo, deleteTodo, toggleComplete, editingText, todoEditing, setTodoEditing, setEditingText}, ref) => {\n  return (\n    <div className=\"todo__row\" ref={ref}>\n      {todoEditing === todo.id ? (<input className=\"edit__input\" type=\"text\" onChange={(e)=>setEditingText(e.target.value)} value={editingText}/>) : \n      (todo.complete ? (<div className=\"todo__row completed\" >{todo.text}</div>) : (<div className=\"todo__row\" >{todo.text}</div>))}\n              \n      <div className=\"group__buttons\">\n        <button className=\"todo__btns\" onClick={()=>deleteTodo(todo.id)}>< FaIcons.FaTrashAlt/></button>\n  \n        {todo.complete ? (<button className=\"todo__btns completed\" onClick={()=>toggleComplete(todo.id)} ><FaIcons.FaCheck/></button>) : (<button className=\"todo__btns\" onClick={()=>toggleComplete(todo.id)} ><FaIcons.FaCheck/></button>)}\n  \n        {todoEditing === todo.id ? (<button className=\"todo__btns\" onClick={()=>editTodo(todo.id)}> < FaIcons.FaSignInAlt/></button>) : (<button className=\"todo__btns\" onClick={()=>{setTodoEditing(todo.id)}}> < FaIcons.FaPen/></button>)}\n\n      </div>\n                 \n              \n    </div>\n  )\n})\n\nexport default Todo\n","import React, { useState, useEffect } from 'react';\nimport './Todos.css';\nimport Todo from \"./Todo\"\nimport * as FaIcons from 'react-icons/fa';\nimport FlipMove from 'react-flip-move';\n\nfunction Todos() {\n\n  const [todo, setTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [todoEditing, setTodoEditing] = useState(null)\n  const [editingText, setEditingText] = useState('')\n\n  useEffect(() => {\n    const temp = localStorage.getItem(\"todos\")\n    const storedTodos = JSON.parse(temp)\n    if(storedTodos) {\n      setTodos(storedTodos)\n    }\n  },[]);\n\n  useEffect(() => {\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\",temp)\n  }, [todos]);\n\n  function handleSubmit(e){\n    e.preventDefault();\n    if(todo.length === 0) return;\n\n    const newTodo ={\n      id: new Date().getTime(),\n      text: todo.charAt(0).toUpperCase() + todo.slice(1),\n      complete: false\n    }  \n\n    setTodos([newTodo, ...todos]);\n    setTodo('')\n  }\n\n  function deleteTodo(id){\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos)\n  }\n\n  function toggleComplete(id){\n    const updatedTodos = [...todos].map((todo)=>{\n      if(todo.id ===id){ \n        todo.complete = !todo.complete \n      }\n      return todo; \n    })\n\n    setTodos(updatedTodos)\n  }\n\n  function editTodo(id){\n    if(editingText.length === 0) return;\n    const updatedTodos= [...todos].map((todo)=>{\n      if(todo.id === id){ \n        todo.text = editingText; \n      }\n      \n      return todo; \n    })\n    setTodos(updatedTodos);\n    setTodoEditing(null);\n    setEditingText('')\n  }\n\n\n  return (\n    <div className=\"todo__list\" >\n\n    <h1 className=\"title\">Now let's see, what's the plan for today?</h1>\n\n      <form className=\"todo__form\" onSubmit={handleSubmit}>\n        <input className=\"todo__input\"  type=\"text\" onChange={(e)=>setTodo(e.target.value)} value={todo}/>\n        <button className=\"todo__btns\" type=\"submit\" ><FaIcons.FaPlus/></button>\n      </form>\n\n\n      <FlipMove typeName={null}>\n\n          {todos.map(todo => (\n            <Todo \n            key={todo.id} \n            todo={todo}\n            deleteTodo={deleteTodo}\n            toggleComplete={toggleComplete} \n            editTodo={editTodo}\n            todoEditing={todoEditing}\n            setTodoEditing={setTodoEditing}\n            setEditingText={setEditingText}\n            />\n          ))}\n         \n      </FlipMove>\n\n    </div>\n  )\n}\n\nexport default Todos;\n","import './App.css';\nimport Quote from \"./Quote/Quote\";\nimport Todos from \"./Todo/Todos\"\n\nfunction App() {\n  return (\n    <div className='conteiner'>\n\n      <Quote />\n\n      <div className=\"cirle__1\"></div>\n      <div className=\"cirle__2\"></div>\n      <div className=\"cirle__3\"></div>\n      <div className=\"cirle__4\"></div>\n\n      <Todos />\n\n      <div className=\"author\">\n        <h4>Created by Lorenzo Syku, 2021</h4>\n      </div>\n    </div>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}